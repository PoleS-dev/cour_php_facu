<?php
// ============================================
// Cours sur les M√©thodes Magiques en PHP
// PHP Orient√© Objet
// Fichier 100% ex√©cutable pour apprentissage
// ============================================

class Magie {

    public $visible = "Je suis une propri√©t√© publique !";

    // 1. __construct() - Initialisation de l'objet
    public function __construct() {
        echo "[__construct] ‚ûú L‚Äôobjet est instanci√©.<br>";
    }

    // 2. __destruct() - Nettoyage √† la fin
    public function __destruct() {
        echo "[__destruct] ‚ûú L‚Äôobjet est d√©truit automatiquement.<br>";
    }

    // 3. __get() - Acc√®s √† une propri√©t√© inaccessible
    public function __get($propriete) {
        echo "[__get] ‚ûú La propri√©t√© '$propriete' est inaccessible ou inexistante.<br>";
    }

    // 4. __set() - Tentative d‚Äôassignation d'une propri√©t√© inaccessible
    public function __set($propriete, $valeur) {
        echo "[__set] ‚ûú Vous essayez de d√©finir '$propriete' √† la valeur '$valeur'.<br>";
    }

    // 5. __isset() - Test isset/empty sur une propri√©t√© inaccessible
    public function __isset($propriete) {
        echo "[__isset] ‚ûú isset() appel√© sur '$propriete'.<br>";
        return false;
    }

    // 6. __unset() - Suppression d'une propri√©t√© inaccessible
    public function __unset($propriete) {
        echo "[__unset] ‚ûú unset() appel√© sur '$propriete'.<br>";
    }

    // 7. __call() - Appel de m√©thode non d√©finie
    public function __call($nom, $arguments) {
        echo "[__call] ‚ûú M√©thode '$nom' appel√©e avec arguments : " . implode(', ', $arguments) . "<br>";
    }

    // 8. __callStatic() - Appel de m√©thode statique non d√©finie
    public static function __callStatic($nom, $arguments) {
        echo "[__callStatic] ‚ûú Appel statique de '$nom' avec arguments : " . implode(', ', $arguments) . "<br>";
    }

    // 9. __toString() - Conversion de l‚Äôobjet en string
    public function __toString() {
        return "[__toString] ‚ûú Objet converti en texte.<br>";
    }

    // 10. __invoke() - Appel de l‚Äôobjet comme une fonction
    public function __invoke($param) {
        echo "[__invoke] ‚ûú Objet appel√© comme une fonction avec argument : $param<br>";
    }

    // 11. __clone() - Clonage de l‚Äôobjet
    public function __clone() {
        echo "[__clone] ‚ûú Clonage de l‚Äôobjet effectu√© !<br>";
    }
}

// ===============================
// ‚ú® Tests pratiques des m√©thodes
// ===============================
echo "<h2>üîÆ Test des M√©thodes Magiques</h2>";

$obj = new Magie(); // __construct

// __get
echo $obj->invisible;

// __set
$obj->secret = "top secret";

// __isset
isset($obj->cache);

// __unset
unset($obj->cache);

// __call
$obj->lancerSort("abracadabra", 2025);

// __callStatic
Magie::appelStatique("boom");

// __toString
echo $obj;

// __invoke
$obj("invoqu√©");

// __clone
$copie = clone $obj;

// Fin du script : __destruct sera appel√© automatiquement
?>
